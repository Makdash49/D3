<html>
  <head>
    <script src="jquery-1.11.3.js"></script>
    <script src="d3.v3.min.js"></script>


    <style>
        .axis path, .axis line
        {
            fill: none;
            stroke: #777;
            shape-rendering: crispEdges;
        }

        .axis text
        {
            font-family: 'Arial';
            font-size: 13px;
        }
        .tick
        {
            stroke-dasharray: 1, 2;
        }
        .bar
        {
            fill: FireBrick;
        }
    </style>

  </head>
  <body>
    <h2>Temperature of Hottest Day of the Year</h2>
    <svg id="visualisation" width="1000" height="500"></svg>


      <script>
      InitChart();

      function InitChart() {

        var barData = [{
          'x': 2011,
          'y': 99
        }, {
          'x': 2012,
          'y': 90
        }, {
          'x': 2013,
          'y': 96
        }, {
          'x': 2014,
          'y': 100
        }, {
          'x': 2015,
          'y': 50
        }, {

        }];

        var vis = d3.select('#visualisation'),
          WIDTH = 1000,
          HEIGHT = 500,
          MARGINS = {
            top: 20,
            right: 20,
            bottom: 20,
            left: 50
          },
          xRange = d3.scale.ordinal().rangeRoundBands([MARGINS.left, WIDTH - MARGINS.right], 0.1).domain(barData.map(function (d) {
            return d.x;
          })),


          yRange = d3.scale.linear().range([HEIGHT - MARGINS.top, MARGINS.bottom]).domain([90- 2,
            d3.max(barData, function (d) {
              return d.y;
            })
          ]),

          xAxis = d3.svg.axis()
            .scale(xRange)
            .tickSize(5)
            .tickSubdivide(true),

          yAxis = d3.svg.axis()
            .scale(yRange)
            .tickSize(5)
            .orient("left")
            .tickSubdivide(true);


        vis.append('svg:g')
          .attr('class', 'x axis')
          .attr('transform', 'translate(0,' + (HEIGHT - MARGINS.bottom) + ')')
          .call(xAxis);

        vis.append('svg:g')
          .attr('class', 'y axis')
          .attr('transform', 'translate(' + (MARGINS.left) + ',0)')
          .call(yAxis);

        vis.selectAll('rect')
          .data(barData)
          .enter()
          .append('rect')
          .attr('x', function (d) {
            return xRange(d.x);
          })
          .attr('y', function (d) {
            return yRange(d.y);
          })
          .attr('width', xRange.rangeBand())
          .attr('height', function (d) {
            return ((HEIGHT - MARGINS.bottom) - yRange(d.y));
          })
          .attr('fill', 'red')
          .on('mouseover',function(d){
            d3.select(this)
              .attr('fill','purple');
          })
          .on('mouseout',function(d){
            d3.select(this)
              .attr('fill','red');
          });
      }
    </script>

  </body>
</html>

